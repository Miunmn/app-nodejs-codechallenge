version: "3.8"
services:
  postgres:
    image: postgres:14
    ports:
      - "5431:5432"
    volumes:
    - postgres:/var/lib/postgresql/data
    env_file:
      - docker.env
    networks:
      - app-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  server:
    image: "server_${NODE_ENV}"
    container_name: "server_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env    
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    command: npm start
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
  validation-server:
    image: "validation_server_${NODE_ENV}"
    container_name: "validation_server_${NODE_ENV}"
    env_file: .env
    environment:
      - VALIDATION_SERVER_PORT:${VALIDATION_SERVER_PORT}
    build:
      context: ./validation-server
      dockerfile: Dockerfile
    command: npm start
    ports:
      - ${VALIDATION_SERVER_PORT}:${VALIDATION_SERVER_PORT}
    volumes:
      - ./validation-server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
  
networks:
  app-network:
      driver: bridge

volumes:
  postgres:
    driver: local